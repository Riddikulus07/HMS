{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignments\\\\DBMS-2\\\\Hospital-Management-System-DBMS-master\\\\frontend\\\\src\\\\DocHome.js\";\nimport React, { Component, useState } from 'react';\nimport { Box, Button, Heading, Grommet, Grid, Text } from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: '#000000'\n    },\n    font: {\n      family: 'Lato'\n    }\n  }\n};\n\nconst SidebarButton = ({\n  label,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Button, Object.assign({\n  plain: true\n}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}), ({\n  hover\n}) => /*#__PURE__*/React.createElement(Box, {\n  background: hover ? \"#DADADA\" : undefined,\n  pad: {\n    horizontal: \"large\",\n    vertical: \"medium\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Text, {\n  size: \"large\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}, label)));\n\nvar a;\nfetch(\"http://localhost:3001/userInSession\").then(res => res.json()).then(res => {\n  var string_json = JSON.stringify(res);\n  var email_json = JSON.parse(string_json);\n  email_in_use = email_json.email;\n  a = email_json.email;\n});\n\nif (a != \"admin1@gmail.com\") {\n  const SidebarButtons = () => {\n    const [active, setActive] = useState();\n    return /*#__PURE__*/React.createElement(Grommet, {\n      full: true,\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fill: true,\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      background: \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, [\"Appointments\", \"View Patients\", \"Settings\", \"Sign Out\"].map(label => /*#__PURE__*/React.createElement(SidebarButton, {\n      key: label,\n      label: label,\n      active: label === active,\n      onClick: () => {\n        if (label === \"Appointments\") {\n          window.location = \"/ApptList\";\n        } else if (label === \"Sign Out\") {\n          fetch(\"http://localhost:3001/endSession\");\n          window.location = \"/\";\n        } else if (label === \"Settings\") {\n          window.location = \"/DocSettings\";\n        } else if (label === \"View Patients\") {\n          window.location = \"/MedHistView\";\n        }\n\n        setActive(label);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })))));\n  };\n} else {\n  const SidebarButtons = () => {\n    const [active, setActive] = useState();\n    return /*#__PURE__*/React.createElement(Grommet, {\n      full: true,\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fill: true,\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      background: \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, [\"Create Schedule\"].map(label => /*#__PURE__*/React.createElement(SidebarButton, {\n      key: label,\n      label: label,\n      active: label === active,\n      onClick: () => {\n        if (label === \"Create Schedule\") {\n          window.location = \"/CreateSchedules\";\n        }\n\n        setActive(label);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    })))));\n  };\n}\n\nexport class DocHome extends Component {\n  componentDidMount() {}\n\n  render() {\n    const Header = () => /*#__PURE__*/React.createElement(Box, {\n      tag: \"header\",\n      background: \"brand\",\n      pad: \"small\",\n      elevation: \"small\",\n      justify: \"between\",\n      direction: \"row\",\n      align: \"center\",\n      flex: false,\n      style: {\n        borderBottom: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: 'inherit',\n        textDecoration: 'inherit'\n      },\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      level: \"3\",\n      margin: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 85\n      }\n    }, \"HMS\")));\n\n    return /*#__PURE__*/React.createElement(Grommet, {\n      full: true,\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      fill: true,\n      rows: ['auto', 'flex'],\n      columns: ['auto', 'flex'],\n      areas: [{\n        name: 'sidebar',\n        start: [0, 1],\n        end: [0, 1]\n      }, {\n        name: 'main',\n        start: [1, 1],\n        end: [1, 1]\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      gridArea: \"sidebar\",\n      width: \"small\",\n      animation: [{\n        type: 'fadeIn',\n        duration: 300\n      }, {\n        type: 'slideRight',\n        size: 'xlarge',\n        duration: 150\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SidebarButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      gridArea: \"main\",\n      justify: \"top\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      pad: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"if(a!=\\\"admin1@gmail.com\\\")\", /*#__PURE__*/React.createElement(Heading, {\n      color: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, \"Welcome Doctor\"), \"else\", /*#__PURE__*/React.createElement(Heading, {\n      color: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, \"Welcome Admin\"))))));\n  }\n\n}\nexport default DocHome;","map":{"version":3,"sources":["D:/Assignments/DBMS-2/Hospital-Management-System-DBMS-master/frontend/src/DocHome.js"],"names":["React","Component","useState","Box","Button","Heading","Grommet","Grid","Text","theme","global","colors","brand","focus","font","family","SidebarButton","label","rest","hover","undefined","horizontal","vertical","a","fetch","then","res","json","string_json","JSON","stringify","email_json","parse","email_in_use","email","SidebarButtons","active","setActive","map","window","location","DocHome","componentDidMount","render","Header","borderBottom","color","textDecoration","name","start","end","type","duration","size"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    Grid,\n    Text,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst SidebarButton = ({ label, ...rest }) => (\n    <Button plain {...rest}>\n        {({ hover }) => (\n            <Box\n                background={hover ? \"#DADADA\" : undefined}\n                pad={{ horizontal: \"large\", vertical: \"medium\" }}\n            >\n                <Text size=\"large\">{label}</Text>\n            </Box>\n        )}\n    </Button>\n);\nvar a;\nfetch(\"http://localhost:3001/userInSession\")\n.then(res => res.json())\n.then(res => {\n    var string_json = JSON.stringify(res);\n    var email_json = JSON.parse(string_json);\n    email_in_use = email_json.email;\n    a=email_json.email;\n});\nif(a!=\"admin1@gmail.com\")\n{\nconst SidebarButtons = () => {\n    const [active, setActive] = useState();\n    return (\n        <Grommet full theme={theme}>\n            <Box fill direction=\"row\">\n                <Box background=\"brand\">\n                    {[\"Appointments\", \"View Patients\", \"Settings\", \"Sign Out\"].map(label => (\n                        <SidebarButton\n                            key={label}\n                            label={label}\n                            active={label === active}\n                            onClick={() => {\n                                if (label === \"Appointments\") {\n                                    window.location = \"/ApptList\"\n                                }\n                                else if (label === \"Sign Out\") {\n                                    fetch(\"http://localhost:3001/endSession\");\n                                    window.location = \"/\"\n                                }\n                                else if (label === \"Settings\") {\n                                    window.location = \"/DocSettings\"\n                                }\n                                else if (label === \"View Patients\") {\n                                    window.location = \"/MedHistView\"\n                                }\n                                setActive(label);\n                            }}\n                        />\n                    ))}\n\n                </Box>\n            </Box>\n        </Grommet>\n    );\n};\n}\nelse\n{\n    \nconst SidebarButtons = () => {\n    const [active, setActive] = useState();\n    return (\n        <Grommet full theme={theme}>\n            <Box fill direction=\"row\">\n                <Box background=\"brand\">\n                    {[\"Create Schedule\"].map(label => (\n                        <SidebarButton\n                            key={label}\n                            label={label}\n                            active={label === active}\n                            onClick={() => {\n                                if (label === \"Create Schedule\") {\n                                    window.location = \"/CreateSchedules\"\n                                }\n                                setActive(label);\n                            }}\n                        />\n                    ))}\n\n                </Box>\n            </Box>\n        </Grommet>\n    );\n};\n}\nexport class DocHome extends Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n                style={{ borderBottom: \"1px solid grey\" }}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit' }} href=\"/\"><Heading level='3' margin='none'>HMS</Heading></a>\n\n            </Box>\n        );\n\n        return (\n            <Grommet full={true}\n                theme={theme}>\n                <Box align=\"left\">\n                    <Header />\n                    <Grid\n                        fill\n                        rows={['auto', 'flex']}\n                        columns={['auto', 'flex']}\n                        areas={[\n                            { name: 'sidebar', start: [0, 1], end: [0, 1] },\n                            { name: 'main', start: [1, 1], end: [1, 1] },\n                        ]}>\n                        <Box\n                            gridArea=\"sidebar\"\n                            width=\"small\"\n                            animation={[\n                                { type: 'fadeIn', duration: 300 },\n                                { type: 'slideRight', size: 'xlarge', duration: 150 },\n                            ]}\n                        >\n                            <SidebarButtons />\n                        </Box>\n                        <Box\n                            gridArea=\"main\"\n                            justify=\"top\"\n                            align=\"center\">\n                            <Box align=\"center\" pad=\"large\">\n                            if(a!=\"admin1@gmail.com\"){\n                                <Heading\n                                    color=\"#000000\">Welcome Doctor\n                                </Heading>}\n                                else\n                                {\n                                    <Heading\n                                    color=\"#000000\">Welcome Admin\n                                </Heading>\n                                }\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default DocHome;"]},"metadata":{},"sourceType":"module"}