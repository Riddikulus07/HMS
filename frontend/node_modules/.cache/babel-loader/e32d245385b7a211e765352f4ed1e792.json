{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignments\\\\DBMS-2\\\\Hospital-Management-System-DBMS-master\\\\frontend\\\\src\\\\schedulingAppt.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Schedule } from 'grommet-icons';\nimport { Box, Button, Heading, Form, Text, TextArea, Grommet, Calendar, DropButton, MaskedInput, Keyboard, Select } from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\"\n    },\n    font: {\n      family: 'Lato'\n    }\n  }\n};\nvar theDate;\nvar theTime;\nvar endTime;\nvar theConcerns;\nvar theSymptoms;\nvar theDoc;\n\nconst AppBar = props => /*#__PURE__*/React.createElement(Box, Object.assign({\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  style: {\n    zIndex: '1'\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}));\n\nconst DropContent = ({\n  date: initialDate,\n  time: initialTime,\n  onClose\n}) => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState();\n\n  const close = () => {\n    theDate = date;\n    theTime = time; //time is string, store it as [hour, min]\n\n    let parsedTime = theTime.split(\":\"); //parse hr string to in and add one hour to start hour\n\n    let startHour = parseInt(parsedTime[0], 10);\n    let endHour = startHour + 1; //rejoin into string\n\n    endTime = `${endHour}:00`;\n    console.log(endTime);\n    console.log(theDate);\n    console.log(theTime);\n    onClose(date || initialDate, time || initialTime);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    animate: false,\n    date: date || initialDate,\n    onSelect: setDate,\n    showAdjacentDays: false,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    pad: \"medium\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    required: true,\n    onEnter: event => {\n      event.preventDefault(); // so drop doesn't re-open\n\n      close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: [{\n      length: [1, 2],\n      options: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n      regexp: /^1[1-2]$|^[0-9]$/,\n      placeholder: \"hh\"\n    }, {\n      fixed: \":\"\n    }, {\n      length: 2,\n      options: [\"00\"],\n      regexp: /^[0-5][0-9]$|^[0-9]$/,\n      placeholder: \"mm\"\n    }],\n    value: time || initialTime,\n    name: \"maskedInput\",\n    onChange: event => setTime(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Done\",\n    onClick: close,\n    color: \"#00739D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst DateTimeDropButton = () => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState(\"\");\n  const [open, setOpen] = React.useState();\n\n  const onClose = (nextDate, nextTime) => {\n    setDate(nextDate);\n    setTime(nextTime);\n    setOpen(false);\n    setTimeout(() => setOpen(undefined), 1);\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    pad: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropButton, {\n    open: open,\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    dropContent: /*#__PURE__*/React.createElement(DropContent, {\n      date: date,\n      time: time,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    gap: \"small\",\n    align: \"center\",\n    pad: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: date ? undefined : \"dark-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, date ? `${new Date(date).toLocaleDateString()} ${time}` : \"Select date & time\"), /*#__PURE__*/React.createElement(Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst ConcernsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theConcerns = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    height: \"xsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter your concerns...\",\n    value: value,\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst SymptomsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theSymptoms = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    height: \"xsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter your symptoms...\",\n    value: value,\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction DoctorsDropdown() {\n  const [value, setValue] = useState();\n  const [doctorsList, setList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/docInfo\").then(res => res.json()).then(res => {\n      let arr = [];\n      res.data.forEach(i => {\n        let tmp = `${i.name} (${i.email})`;\n        arr.push(tmp);\n      });\n      setList(arr);\n    });\n  }, []);\n\n  const onChange = event => {\n    setValue(event.value);\n    let doc = event.value.match(/\\((.*)\\)/)[1];\n    theDoc = doc;\n  };\n\n  return /*#__PURE__*/React.createElement(Select, {\n    options: doctorsList,\n    value: value,\n    placeholder: \"Select Doctor\",\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  });\n}\n\nexport class SchedulingAppt extends Component {\n  constuctor() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grommet, {\n      theme: theme,\n      full: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: 'inherit',\n        textDecoration: 'inherit'\n      },\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      level: \"3\",\n      margin: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 76\n      }\n    }, \"HMS\"))), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      pad: \"small\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: ({\n        value\n      }) => {\n        //probably fetch uid here, add one\n        fetch(\"http://localhost:3001/userInSession\").then(res => res.json()).then(res => {\n          var string_json = JSON.stringify(res);\n          var email_json = JSON.parse(string_json);\n          let email_in_use = email_json.email;\n          fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc).then(res => res.json()).then(res => {\n            if (res.data[0]) {\n              window.alert(\"Appointment Clash! Try another doctor or date/time\");\n            } else {\n              fetch(\"http://localhost:3001/genApptUID\").then(res => res.json()).then(res => {\n                var string_json = JSON.stringify(res);\n                var uid_json = JSON.parse(string_json);\n                let gen_uid = uid_json.id;\n                console.log(gen_uid);\n                fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime + \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \"&id=\" + gen_uid + \"&doc=\" + theDoc).then(x => {\n                  fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then(x => {\n                    window.alert(\"Appointment successfully scheduled!\");\n                    location.reload();\n                  });\n                });\n              });\n            }\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoctorsDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DateTimeDropButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ConcernsTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SymptomsTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      pad: \"small\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Attempt To Schedule\",\n      type: \"submit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nexport default SchedulingAppt;","map":{"version":3,"sources":["D:/Assignments/DBMS-2/Hospital-Management-System-DBMS-master/frontend/src/schedulingAppt.js"],"names":["React","Component","useState","useEffect","Schedule","Box","Button","Heading","Form","Text","TextArea","Grommet","Calendar","DropButton","MaskedInput","Keyboard","Select","theme","global","colors","brand","focus","active","font","family","theDate","theTime","endTime","theConcerns","theSymptoms","theDoc","AppBar","props","left","right","vertical","zIndex","DropContent","date","initialDate","time","initialTime","onClose","setDate","setTime","close","parsedTime","split","startHour","parseInt","endHour","console","log","event","preventDefault","length","options","regexp","placeholder","fixed","target","value","DateTimeDropButton","open","setOpen","nextDate","nextTime","setTimeout","undefined","Date","toLocaleDateString","ConcernsTextArea","setValue","onChange","SymptomsTextArea","DoctorsDropdown","doctorsList","setList","fetch","then","res","json","arr","data","forEach","i","tmp","name","email","push","doc","match","SchedulingAppt","constuctor","render","color","textDecoration","string_json","JSON","stringify","email_json","parse","email_in_use","window","alert","uid_json","gen_uid","id","x","location","reload"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {\n  Schedule,\n} from 'grommet-icons';\nimport {\n  Box,\n  Button,\n  Heading,\n  Form,\n  Text,\n  TextArea,\n  Grommet,\n  Calendar,\n  DropButton,\n  MaskedInput,\n  Keyboard,\n  Select\n} from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\",\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\nvar theDate;\nvar theTime;\nvar endTime;\nvar theConcerns;\nvar theSymptoms;\nvar theDoc;\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props} />\n);\n\nconst DropContent = ({ date: initialDate, time: initialTime, onClose }) => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState();\n\n  const close = () => {\n    theDate = date;\n    theTime = time;\n\n    //time is string, store it as [hour, min]\n    let parsedTime = theTime.split(\":\");\n\n    //parse hr string to in and add one hour to start hour\n    let startHour = parseInt(parsedTime[0], 10);\n    let endHour = startHour + 1;\n\n    //rejoin into string\n    endTime = `${endHour}:00`;\n\n    console.log(endTime);\n    console.log(theDate)\n    console.log(theTime);\n    onClose(date || initialDate, time || initialTime);\n  };\n\n  return (\n    <Box align=\"center\">\n      <Calendar\n        animate={false}\n        date={date || initialDate}\n        onSelect={setDate}\n        showAdjacentDays={false}\n        required\n      />\n      <Box flex={false} pad=\"medium\" gap=\"small\">\n        <Keyboard\n          required\n          onEnter={event => {\n            event.preventDefault(); // so drop doesn't re-open\n            close();\n          }}\n        >\n          <MaskedInput\n            mask={[\n              {\n                length: [1, 2],\n                options: [\n                  \"0\",\n                  \"1\",\n                  \"2\",\n                  \"3\",\n                  \"4\",\n                  \"5\",\n                  \"6\",\n                  \"7\",\n                  \"8\",\n                  \"9\",\n                  \"10\",\n                  \"11\",\n                  \"12\",\n                  \"13\",\n                  \"14\",\n                  \"15\",\n                  \"16\",\n                  \"17\",\n                  \"18\",\n                  \"19\",\n                  \"20\",\n                  \"21\",\n                  \"22\",\n                  \"23\",\n\n                ],\n                regexp: /^1[1-2]$|^[0-9]$/,\n                placeholder: \"hh\"\n              },\n              { fixed: \":\" },\n              {\n                length: 2,\n                options: [\"00\"],\n                regexp: /^[0-5][0-9]$|^[0-9]$/,\n                placeholder: \"mm\"\n              }\n            ]}\n            value={time || initialTime}\n            name=\"maskedInput\"\n            onChange={event => setTime(event.target.value)}\n            required\n          />\n        </Keyboard>\n        <Box flex={false}>\n          <Button label=\"Done\" onClick={close} color=\"#00739D\" />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst DateTimeDropButton = () => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState(\"\");\n  const [open, setOpen] = React.useState();\n\n  const onClose = (nextDate, nextTime) => {\n    setDate(nextDate);\n    setTime(nextTime);\n    setOpen(false);\n    setTimeout(() => setOpen(undefined), 1);\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box align=\"center\" pad=\"large\">\n        <DropButton\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          dropContent={\n            <DropContent date={date} time={time} onClose={onClose} />\n          }\n        >\n          <Box direction=\"row\" gap=\"small\" align=\"center\" pad=\"small\">\n            <Text color={date ? undefined : \"dark-5\"}>\n              {date\n                ? `${new Date(date).toLocaleDateString()} ${time}`\n                : \"Select date & time\"}\n            </Text>\n            <Schedule />\n          </Box>\n        </DropButton>\n      </Box>\n    </Grommet>\n  );\n};\n\nconst ConcernsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theConcerns = event.target.value;\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box\n        width=\"medium\"\n        height=\"xsmall\"\n      >\n      <TextArea\n        placeholder=\"Enter your concerns...\"\n        value={value}\n        onChange={onChange}\n        fill\n        required />\n      </Box>\n    </Grommet>\n  );\n};\n\nconst SymptomsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theSymptoms = event.target.value;\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box\n        width=\"medium\"\n        height=\"xsmall\"\n      >\n        <TextArea\n          placeholder=\"Enter your symptoms...\"\n          value={value}\n          onChange={onChange} fill\n          required />\n      </Box>\n    </Grommet>\n  );\n};\n\nfunction DoctorsDropdown() {\n  const [value, setValue] = useState();\n  const [doctorsList, setList] = useState([]);\n  useEffect(() => {    \n    fetch(\"http://localhost:3001/docInfo\")\n    .then(res => res.json())\n    .then(res => {\n      let arr = []\n      res.data.forEach(i => {\n        let tmp = `${i.name} (${i.email})`;\n        arr.push(tmp);\n      });\n      setList(arr);\n    });\n  }, []);\n  const onChange = event => {\n    setValue(event.value);\n    let doc = event.value.match(/\\((.*)\\)/)[1];\n    theDoc = doc;\n  };\n  return (\n    <Select\n      options={doctorsList}\n      value={value}\n      placeholder=\"Select Doctor\"\n      onChange={onChange} fill\n      required\n    />\n  );\n}\n\nexport class SchedulingAppt extends Component {\n  constuctor() {\n  }\n  render() {\n    return (\n      <Grommet theme={theme} full>\n        <AppBar>\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HMS</Heading></a>\n        </AppBar>\n        <Box align=\"center\" pad=\"small\" gap=\"small\">\n          <Form\n            onSubmit={({ value }) => {\n              //probably fetch uid here, add one\n              fetch(\"http://localhost:3001/userInSession\")\n                .then(res => res.json())\n                .then(res => {\n                  var string_json = JSON.stringify(res);\n                  var email_json = JSON.parse(string_json);\n                  let email_in_use = email_json.email;\n                  fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc)\n                    .then(res => res.json())\n                    .then(res => {\n                      if ((res.data[0])) {\n                        window.alert(\"Appointment Clash! Try another doctor or date/time\");\n                      } else {\n                        fetch(\"http://localhost:3001/genApptUID\")\n                          .then(res => res.json())\n                          .then(res => {\n                            var string_json = JSON.stringify(res);\n                            var uid_json = JSON.parse(string_json);\n                            let gen_uid = uid_json.id;\n                            console.log(gen_uid);\n                            fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime +\n                              \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \n                              \"&id=\" + gen_uid + \"&doc=\" + theDoc).then((x)=>{\n                              fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid +\n                                \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then((x)=>{\n                                  window.alert(\"Appointment successfully scheduled!\");\n                                  location.reload();\n                                });\n                            })\n                          });\n                      }\n                    });\n                });\n            }}\n          >\n            <Box align=\"center\" gap=\"small\">\n              <DoctorsDropdown />\n            </Box>\n            <DateTimeDropButton>\n            </DateTimeDropButton>\n            <ConcernsTextArea />\n            <br />\n            <SymptomsTextArea />\n            <br />\n            <Box align=\"center\" pad=\"small\" gap=\"small\">\n              <Button\n                label=\"Attempt To Schedule\"\n                type=\"submit\"\n                primary\n              />\n            </Box>\n          </Form>\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default SchedulingAppt;"]},"metadata":{},"sourceType":"module"}